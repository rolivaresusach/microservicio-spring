pool:
  vmImage: ubuntu-latest

trigger: ['feature-ms-rodrigoolivares-mensaje']

steps:
  - task: Gradle@3
    displayName: 'Build'
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build test'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: true

  - task: CopyFiles@2
    displayName: 'Prepare artifact'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        **/build/libs/*.jar
        **/build/**/*.xml
        **/application.properties
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: appJar
      publishLocation: 'Container'

  - task: DownloadBuildArtifacts@0
    displayName: 'SonarQube artifact'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appJar'
      downloadPath: '$(Pipeline.Workspace)'

  - task: SonarCloudPrepare@1
    displayName: 'Sonarqube prepare'
    inputs:
      SonarCloud: 'sonar-cloud-usach'
      organization: 'cl-usach-diplomados-rolivares'
      projectKey: 'devops-foundation-ms'
      projectName: 'devops-foundation-ms'
      extraProperties: |
        sonar.coverage.jacoco.xmlReportPaths=$(Pipeline.Workspace)/appJar/build/reports/jacoco/test/jacocoTestReport.xml

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'jacocoTestReport'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.3'
    displayName: 'SonarQube run'

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'SonarQube publish'

  - task: sonarcloud-buildbreaker@2
    displayName: 'Quality Gate'
    inputs:
      SonarCloud: 'sonar-cloud-usach'
      organization: 'cl-usach-diplomados-rolivares'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appJar'
      downloadPath: '$(Pipeline.Workspace)'
    displayName: 'Docker artifact'

  - script: 'mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs'
    displayName: 'Artifact prepare'

  - task: Docker@2
    displayName: 'Registry Login'
    inputs:
      containerRegistry: 'docker-hub-usach'
      command: 'login'

  - task: Docker@2
    displayName: 'Docker Push'
    inputs:
      containerRegistry: 'docker-hub-usach'
      repository: 'rolivaresdiplomados/tarea1'
      command: 'buildAndPush'
      tags: |
        v$(Build.BuildId)
        latest
      Dockerfile: '**/Dockerfile'

  - task: KubectlInstaller@0
    inputs:
      kubectlVersion: 'latest' 

  - task: Kubernetes@1
    displayName: 'AKS Login'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure subscription 1(466bb1af-53ab-4320-b72a-7ed8b321590b)'
      azureResourceGroup: 'tarea1-cluster'
      kubernetesCluster: 'tarea1-cluster'
      namespace: 'default'
      command: 'login'

  - task: Kubernetes@1
    displayName: 'AKS Deploy'
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure subscription 1(466bb1af-53ab-4320-b72a-7ed8b321590b)'
      azureResourceGroup: 'tarea1-cluster'
      kubernetesCluster: 'tarea1-cluster'
      namespace: 'default'
      command: 'apply'
      arguments: '-f kubernetes/deployment-app.yaml'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'
      azureSubscriptionEndpointForSecrets: 'Azure subscription 1(466bb1af-53ab-4320-b72a-7ed8b321590b)'

  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure subscription 1(466bb1af-53ab-4320-b72a-7ed8b321590b)'        
      azureResourceGroup: 'tarea1-cluster'
      kubernetesCluster: 'tarea1-cluster'
      namespace: 'default'
      command: 'expose'
      arguments: 'deployment tarea1-deployment --type=LoadBalancer --name=tarea1-app'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'
    continueOnError: true
    displayName: AKS Expose

  - script: |
      ipApp=$(kubectl get services tarea1-app --output jsonpath='{.status.loadBalancer.ingress[0].ip}')
      echo $ipApp
      URLApp=http://$ipApp:8080
      echo $URLApp
      echo "##vso[task.setvariable variable=appDeploy;isOutput=true]$URLApp"
      name: getip
    displayName: Get IP

